<svg fill="none" viewBox="0 0 800 400" width="800" height="400" xmlns="http://www.w3.org/2000/svg">
	<foreignObject width="100%" height="100%">
		<div xmlns="http://www.w3.org/1999/xhtml">
			<style>
:root{
  --main: #330100;
  --mainTransparent: #33010069;
  --primary: #FDFF30;
}
html,body{
  padding: 0;
  margin:0;
}
#profile-them{
  display: flex;
  justify-content: space-around;
  align-items: center;
}
.card{
  color: var(--primary);
background: linear-gradient(90deg, rgba(51,1,0,1) 0%, rgba(51,1,0,0.5130427170868348) 100%);
  margin: 10px 10px;
  padding: 10px 10px;
  border-radius: 10px;
  position: relative;
}
#profile-image{
  background-image: url('../images/Tadesse-Alemayehu.jpg');
  background-size: contain;
  background-position: top right;
  background-repeat: no-repeat;
  position: absolute;
  border-radius: 10px;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: -1;
}
			</style>
<article class='card'>
<h2> About me! 💁‍♂️</h2>
<p>😎: I’m a full stack web app developer.</p>
<p>🤓: I’m looking for on-site or remote jobs!</p>
<p>⌨: Would love to work on backend and front end projects. 👷‍♂️</p>
<p>🤗: Enjoy coding more than enjoying itself 😀 </p>
<p>👬: In love with pair programing. Love to collaborate on project and exercises. </p>
<div id='profile-image'>
</div>
</article>
</div>
	</foreignObject>
<!-- Code injected by live-server -->
<script type="text/javascript">
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script></svg>